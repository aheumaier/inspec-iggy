# renders the profile from the parsed files

require 'yaml'

module InspecPlugins
  module Iggy
    class ProfileHelper
      # match the output of 'inspec init profile'
      def self.render_profile(cli_ui, options, source_file, controls)
        name = options[:name]
        overwrite_mode = options[:overwrite]
        # Create new profile at /Users/mattray/ws/inspec-iggy/foobar
        full_destination_root_path = Pathname.new(Dir.pwd).join(name)
        cli_ui.plain_text "Create new profile at #{cli_ui.mark_text(full_destination_root_path)}"
        if File.exist?(full_destination_root_path) && !overwrite_mode
          cli_ui.plain_text "#{cli_ui.mark_text(full_destination_root_path)} exists already, use --overwrite"
          cli_ui.exit(1)
        end
        # ensure that full_destination_root_path directory is available
        FileUtils.mkdir_p(full_destination_root_path)
        #  * Create directory controls
        cli_ui.li "Create directory #{cli_ui.mark_text("#{name}/controls")}"
        FileUtils.mkdir_p("#{name}/controls")
        render_readme_md(cli_ui, name, source_file)
        render_inspec_yml(cli_ui, name, source_file, options)
        render_controls_rb(cli_ui, name, controls)
      end

      #  * Create file README.md
      def self.render_readme_md(cli_ui, name, source_file)
        render_file = "#{name}/README.md"
        cli_ui.li "Create file #{cli_ui.mark_text(render_file)}"
        f = File.new(render_file, 'w')
        f.puts("# #{name}")
        f.puts
        f.puts("This profile was generated by InSpec-Iggy v#{Iggy::VERSION} from the #{source_file} source file.")
        f.close
      end

      #  * Create file inspec.yml
      def self.render_inspec_yml(cli_ui, name, source_file, options)
        render_file = "#{name}/inspec.yml"
        cli_ui.li "Create file #{cli_ui.mark_text(render_file)}"
        yml = {}
        yml['name'] = name
        yml['title'] = options[:title]
        yml['maintainer'] = options[:maintainer]
        yml['copyright'] = options[:copyright]
        yml['copyright_email'] = options[:email]
        yml['license'] = options[:license]
        yml['summary'] = options[:summary]
        yml['version'] = options[:version]
        yml['description'] = "Generated by InSpec-Iggy v#{Iggy::VERSION} from the #{source_file} source file."
        f = File.new(render_file, 'w')
        f.write(yml.to_yaml)
        f.close
      end

      #  * Create file controls/controls.rb
      def self.render_controls_rb(cli_ui, name, controls)
        render_file = "#{name}/controls/controls.rb"
        cli_ui.li "Create file #{cli_ui.mark_text(render_file)}"
        f = File.new(render_file, 'w')
        f.write(controls)
        f.close
      end
    end
  end
end
